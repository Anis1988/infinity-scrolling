{"version":3,"sources":["App.js","useBookSearch.js","index.js"],"names":["App","useState","query","setQuery","pageNumber","setPageNumber","loading","setLoading","error","setError","books","setBooks","hasMore","setHasMore","useEffect","cancel","axios","methode","url","params","q","page","cancelToken","CancelToken","c","then","res","console","log","data","prevBooks","Set","docs","map","t","title","length","catch","e","isCancel","useBookSearch","observer","useRef","lastBookElement","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","type","value","onChange","target","book","index","ref","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPA2CeA,MAvCf,WAAgB,IAAD,EACcC,mBAAS,IADvB,mBACJC,EADI,KACEC,EADF,OAEwBF,mBAAS,GAFjC,mBAEJG,EAFI,KAEOC,EAFP,OCDA,SAAuBH,EAAME,GAAa,IAAD,EAC5BH,oBAAS,GADmB,mBAClDK,EADkD,KAC1CC,EAD0C,OAEhCN,oBAAS,GAFuB,mBAElDO,EAFkD,KAE5CC,EAF4C,OAGhCR,mBAAS,IAHuB,mBAGlDS,EAHkD,KAG5CC,EAH4C,OAI5BV,oBAAS,GAJmB,mBAIlDW,EAJkD,KAI1CC,EAJ0C,KAqCpD,OA9BAC,qBAAU,WAIN,IAAIC,EAmBJ,OAtBAR,GAAW,GACXE,GAAS,GAGTO,IAAM,CACFC,QAAQ,MACRC,IAAI,qCACJC,OAAO,CAACC,EAAElB,EAAOmB,KAAKjB,GACtBkB,YAAa,IAAIN,IAAMO,aAAY,SAAAC,GAAC,OAAGT,EAASS,OACjDC,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAAIG,MAChBlB,GAAS,SAAAmB,GACL,OAAO,YAAI,IAAIC,IAAJ,sBAAYD,GAAZ,YAAyBJ,EAAIG,KAAKG,KAAKC,KAAI,SAAAC,GAAC,OAAEA,EAAEC,gBAG/DtB,EAAWa,EAAIG,KAAKO,OAAS,GAC7B7B,GAAW,GACXE,GAAS,MACV4B,OAAM,SAAAC,GACFtB,IAAMuB,SAASD,IAClB7B,GAAS,MAEN,kBAAMM,OACf,CAACb,EAAME,IAETU,qBAAU,WACNH,EAAS,MACX,CAACT,IAEG,CAACI,UAAQE,QAAMI,UAAQF,SDjCO8B,CAActC,EAAME,GAAjDM,EAHI,EAGJA,MAAME,EAHF,EAGEA,QAAQN,EAHV,EAGUA,QAEfmC,GALK,EAGkBjC,MAEZkC,oBACXC,EAAkBC,uBAAY,SAAAC,GAC7BvC,IACAmC,EAASK,SAASL,EAASK,QAAQC,aACtCN,EAASK,QAAU,IAAIE,sBAAqB,SAAAC,GACrCA,EAAQ,GAAGC,gBAAkBtC,GAC5BP,GAAc,SAAA8C,GAAc,OAAIA,EAAgB,QAGrDN,GAAMJ,EAASK,QAAQM,QAAQP,GAClClB,QAAQC,IAAIiB,MACd,CAACvC,EAAQM,IAOX,OACE,oCACI,2BAAOyC,KAAK,OAAOC,MAAOpD,EAAOqD,SAPvC,SAAsBjB,GAClBnC,EAASmC,EAAEkB,OAAOF,OAClBjD,EAAc,MAMXK,EAAMuB,KAAI,SAACwB,EAAKC,GACb,OAAGhD,EAAM0B,SAAWsB,EAAO,EACpB,yBAAKC,IAAKhB,EAAiBiB,IAAKH,GAAOA,GAEnC,yBAAKG,IAAKH,GAAOA,MAI9B,6BAAMnD,GAAW,gBEjC7BuD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.39b668e1.chunk.js","sourcesContent":["import React, {useCallback, useRef, useState} from 'react';\nimport useBookSearch from \"./useBookSearch\";\n\n\nfunction App() {\n    const [query,setQuery] = useState('')\n    const [pageNumber,setPageNumber] = useState(1)\n    const {books,hasMore,loading,error}=useBookSearch(query,pageNumber)\n\n    const observer = useRef()\n    const lastBookElement = useCallback(node => {\n        if(loading) return\n        if(observer.current) observer.current.disconnect()\n        observer.current = new IntersectionObserver(entries => {\n            if(entries[0].isIntersecting && hasMore) {\n                setPageNumber(prevPageNumber => prevPageNumber +1 )\n            }\n        })\n        if(node) observer.current.observe(node)\n        console.log(node)\n    },[loading,hasMore])\n\n    function handelSearch(e) {\n        setQuery(e.target.value)\n        setPageNumber(1)\n    }\n\n    return (\n      <>\n          <input type=\"text\" value={query} onChange={handelSearch}/>\n          {books.map((book,index) => {\n              if(books.length === index +1) {\n              return <div ref={lastBookElement} key={book}>{book}</div>\n          } else {\n                  return <div key={book}>{book}</div>\n          }\n\n          })}\n            <div>{loading && 'Loading...'}</div>\n            {/* <div>{error && 'Error'}</div> */}\n      </>\n  )\n}\nexport default App;\n","import React, {useState,useEffect}from \"react\";\nimport axios from 'axios';\n\nexport default function useBookSearch(query,pageNumber) {\nconst[loading,setLoading] = useState(true)\nconst[error,setError] = useState(false)\nconst[books,setBooks] = useState([])\nconst[hasMore,setHasMore] = useState(false)\n\n\n    useEffect(()=>{\n        setLoading(true)\n        setError(false)\n\n        let cancel\n        axios({\n            methode:\"GET\",\n            url:\"http://openlibrary.org/search.json\",\n            params:{q:query, page:pageNumber}, // that how they called id \"params\",\"q\",\"page\"\n            cancelToken: new axios.CancelToken(c=> cancel = c)\n        }).then(res=> {\n            console.log(res.data)\n            setBooks(prevBooks => {\n                return [...new Set([...prevBooks,...res.data.docs.map(t=>t.title)])] //unique set\n                console.log(res.data)\n            })\n            setHasMore(res.data.length > 0)\n            setLoading(false)\n            setError(false)\n        }).catch(e=> {\n            if(axios.isCancel(e)) return //this is meant to ignore all the cancellation we meant to cancel\n            setError(true)\n        })\n        return () => cancel()\n    },[query,pageNumber])\n\n    useEffect(()=>{\n        setBooks([])\n    },[query])\n\n    return{loading,error,hasMore,books}\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}