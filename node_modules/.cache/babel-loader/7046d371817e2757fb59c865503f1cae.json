{"ast":null,"code":"var _jsxFileName = \"/Users/anismedini/Downloads/infinity-scrolling-js/src/App.js\";\nimport React, { useCallback, useRef, useState } from 'react';\nimport useBookSearch from \"./useBookSearch\";\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [pageNumber, setPageNumber] = useState(1);\n  const {\n    books,\n    hasMore,\n    loading,\n    error\n  } = useBookSearch(query, pageNumber);\n  const observer = useRef();\n  const lastBookElement = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        setPageNumber(prevPageNumber => prevPageNumber + 1);\n      }\n    });\n    if (node) observer.current.observe(node);\n    console.log(node);\n  }, [loading, hasMore]);\n\n  function handelSearch(e) {\n    setQuery(e.target.value);\n    setPageNumber(1);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: query,\n    onChange: handelSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }), books.map((book, index) => {\n    if (books.length === index + 1) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: lastBookElement,\n        key: book,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 22\n        }\n      }, book);\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: book,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 26\n        }\n      }, book);\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, loading && 'Loading...'));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/anismedini/Downloads/infinity-scrolling-js/src/App.js"],"names":["React","useCallback","useRef","useState","useBookSearch","App","query","setQuery","pageNumber","setPageNumber","books","hasMore","loading","error","observer","lastBookElement","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","console","log","handelSearch","e","target","value","map","book","index","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,MAA5B,EAAoCC,QAApC,QAAmD,OAAnD;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAGA,SAASC,GAAT,GAAe;AACX,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBJ,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACK,UAAD,EAAYC,aAAZ,IAA6BN,QAAQ,CAAC,CAAD,CAA3C;AACA,QAAM;AAACO,IAAAA,KAAD;AAAOC,IAAAA,OAAP;AAAeC,IAAAA,OAAf;AAAuBC,IAAAA;AAAvB,MAA8BT,aAAa,CAACE,KAAD,EAAOE,UAAP,CAAjD;AAEA,QAAMM,QAAQ,GAAGZ,MAAM,EAAvB;AACA,QAAMa,eAAe,GAAGd,WAAW,CAACe,IAAI,IAAI;AACxC,QAAGJ,OAAH,EAAY;AACZ,QAAGE,QAAQ,CAACG,OAAZ,EAAqBH,QAAQ,CAACG,OAAT,CAAiBC,UAAjB;AACrBJ,IAAAA,QAAQ,CAACG,OAAT,GAAmB,IAAIE,oBAAJ,CAAyBC,OAAO,IAAI;AACnD,UAAGA,OAAO,CAAC,CAAD,CAAP,CAAWC,cAAX,IAA6BV,OAAhC,EAAyC;AACrCF,QAAAA,aAAa,CAACa,cAAc,IAAIA,cAAc,GAAE,CAAnC,CAAb;AACH;AACJ,KAJkB,CAAnB;AAKA,QAAGN,IAAH,EAASF,QAAQ,CAACG,OAAT,CAAiBM,OAAjB,CAAyBP,IAAzB;AACTQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACH,GAVkC,EAUjC,CAACJ,OAAD,EAASD,OAAT,CAViC,CAAnC;;AAYA,WAASe,YAAT,CAAsBC,CAAtB,EAAyB;AACrBpB,IAAAA,QAAQ,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACApB,IAAAA,aAAa,CAAC,CAAD,CAAb;AACH;;AAED,sBACE,uDACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEH,KAA1B;AAAiC,IAAA,QAAQ,EAAEoB,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKhB,KAAK,CAACoB,GAAN,CAAU,CAACC,IAAD,EAAMC,KAAN,KAAgB;AACvB,QAAGtB,KAAK,CAACuB,MAAN,KAAiBD,KAAK,GAAE,CAA3B,EAA8B;AAC9B,0BAAO;AAAK,QAAA,GAAG,EAAEjB,eAAV;AAA2B,QAAA,GAAG,EAAEgB,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuCA,IAAvC,CAAP;AACH,KAFG,MAEG;AACC,0BAAO;AAAK,QAAA,GAAG,EAAEA,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBA,IAAjB,CAAP;AACP;AAEA,GAPA,CAFL,eAUM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMnB,OAAO,IAAI,YAAjB,CAVN,CADF;AAeH;;AACD,eAAeP,GAAf","sourcesContent":["import React, {useCallback, useRef, useState} from 'react';\nimport useBookSearch from \"./useBookSearch\";\n\n\nfunction App() {\n    const [query,setQuery] = useState('')\n    const [pageNumber,setPageNumber] = useState(1)\n    const {books,hasMore,loading,error}=useBookSearch(query,pageNumber)\n\n    const observer = useRef()\n    const lastBookElement = useCallback(node => {\n        if(loading) return\n        if(observer.current) observer.current.disconnect()\n        observer.current = new IntersectionObserver(entries => {\n            if(entries[0].isIntersecting && hasMore) {\n                setPageNumber(prevPageNumber => prevPageNumber +1 )\n            }\n        })\n        if(node) observer.current.observe(node)\n        console.log(node)\n    },[loading,hasMore])\n\n    function handelSearch(e) {\n        setQuery(e.target.value)\n        setPageNumber(1)\n    }\n\n    return (\n      <>\n          <input type=\"text\" value={query} onChange={handelSearch}/>\n          {books.map((book,index) => {\n              if(books.length === index +1) {\n              return <div ref={lastBookElement} key={book}>{book}</div>\n          } else {\n                  return <div key={book}>{book}</div>\n          }\n\n          })}\n            <div>{loading && 'Loading...'}</div>\n            {/* <div>{error && 'Error'}</div> */}\n      </>\n  )\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}